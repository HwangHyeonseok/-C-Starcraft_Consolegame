스타크래프트 C++ 콘솔 게임 구현 연습

-----------------------------------------*2022-07-28*-----------------------------------------
					     <이용 개념>
#객체 생성, #클래스 멤버 변수 및 함수에 접근
#접근 제한 지정자(public, protected, private), #가상 함수(virtual)

					     <구현 설계>
1) 자신의 종족을 입력 받는다.
2) 자신의 종족으로 때릴 종족을 입력 받는다.
3) 자신이 선택한 종족으로 선택한 때릴 종족을 공격하고 그 결과를 전투로그를 통해 출력한다.

A) 몬스터
Unit 클래스의 자식으로 Zerg,Terran,Protoss 클래스를 만든다.
Zerg, Terran, Protoss 클래스는 Unit 부모 클래스로부터 상속을 받은 클래스이다.

B) 전투
서로 다른 종족 한 마리를 선정해 싸움 결과를 콘솔로 출력한다.
이때 같은 종족끼리 싸우려고 하면 '같은 종족끼리 싸울 수 없다' 는 메시지를 출력하고 다시 입력을 받는다.
서로 다른 종족이 선택된 경우 전투로그를 띄어 때릴 종족을 공격하고 남은 체력 상태와 사망 여부를 계산해서 출력해준다.

					   <문제점/보완점>
보완 개념 : #가상 함수, #동적 할당, #list STL
1. 공격을 하는 함수인 Attack 함수를 부모 클래스인 Unit 클래스에 virtual 키워드(가상 함수)를 지정하고,
자식 클래스인 Zerg, Terran, Protoss에 오버라이드하여 Attack 함수를 사용하고 싶었는데, 이 코드에서는 조건문을 통해 싸울 종족을 분류함으로써 Attack 함수를 호출했다.
즉, 가상 함수를 제대로 활용하지 못했다.

2. 어떤 종족이 죽으면 죽은 상태를 구현하고 싶었다. (죽은 몬스터는 공격을 할 수 없다거나, 죽은 몬스터를 공격할 경우 공격의 대상이 아니라는 문구 출력 등)
즉, 객체가 죽으면 메모리 할당 해제가 되는 것을 구현하고 싶었다. 
이를 위해 동적 할당의 개념을 알아야했다.

3. 추가적으로 이 코드는 몬스터가 1마리 임을 가정하였는데 (Zerg 선택 시 Zerg 1마리, Terran 선택 시 Terran 1마리...) Zerg,Terran, Protoss가 2마리 이상일 수도 있다.
2마리 이상의 몬스터를 저장하기 위해서는 vector나 list의 개념이 필요했다.
이때 죽는(메모리가 할당 해제 되는) 상황이 빈번하게 일어나므로 vector보다 list가 더 컴퓨터가 연산을 덜 할 것 같아 list의 개념을 학습할 수 있도록 해야겠다.


