스타크래프트 C++ 콘솔 게임 구현 연습

----------------------------------*2022-07-28*-----------------------------------
					     <이용 개념>
#객체 생성, #클래스 멤버 변수 및 함수에 접근
#접근 제한 지정자(public, protected, private), #가상 함수(virtual)

				<구현 설계>
1) 자신의 종족을 입력 받는다.
2) 자신의 종족으로 때릴 종족을 입력 받는다.
3) 자신이 선택한 종족으로 선택한 때릴 종족을 공격하고 그 결과를 전투로그를 통해 출력한다.

A) 몬스터
Unit 클래스의 자식으로 Zerg,Terran,Protoss 클래스를 만든다.
Zerg, Terran, Protoss 클래스는 Unit 부모 클래스로부터 상속을 받은 클래스이다.

B) 전투
서로 다른 종족 한 마리를 선정해 싸움 결과를 콘솔로 출력한다.
이때 같은 종족끼리 싸우려고 하면 '같은 종족끼리 싸울 수 없다' 는 메시지를 출력하고 다시 입력을 받는다.
서로 다른 종족이 선택된 경우 전투로그를 띄어 때릴 종족을 공격하고 남은 체력 상태와 사망 여부를 계산해서 출력해준다.

				<문제점/보완점>
보완 개념 : #가상 함수, #동적 할당, #list STL
1. 공격을 하는 함수인 Attack 함수를 부모 클래스인 Unit 클래스에 virtual 키워드(가상 함수)를 지정하고,
자식 클래스인 Zerg, Terran, Protoss에 오버라이드하여 Attack 함수를 사용하고 싶었는데, 이 코드에서는 조건문을 통해 싸울 종족을 분류함으로써 Attack 함수를 호출했다.
즉, 가상 함수를 제대로 활용하지 못했다.

2. 어떤 종족이 죽으면 죽은 상태를 구현하고 싶었다. (죽은 몬스터는 공격을 할 수 없다거나, 죽은 몬스터를 공격할 경우 공격의 대상이 아니라는 문구 출력 등)
즉, 객체가 죽으면 메모리 할당 해제가 되는 것을 구현하고 싶었다. 
이를 위해 동적 할당의 개념을 알아야했다.

3. 추가적으로 이 코드는 몬스터가 1마리 임을 가정하였는데 (Zerg 선택 시 Zerg 1마리, Terran 선택 시 Terran 1마리...) Zerg,Terran, Protoss가 2마리 이상일 수도 있다.
2마리 이상의 몬스터를 저장하기 위해서는 vector나 list의 개념이 필요했다.
이때 죽는(메모리가 할당 해제 되는) 상황이 빈번하게 일어나므로 vector보다 list가 더 컴퓨터가 연산을 덜 할 것 같아 list의 개념을 학습할 수 있도록 해야겠다.

----------------------------------*2022-08-12*-----------------------------------
					     <이용 개념>
#기본 생성자, #레퍼런스(&) 개념, #list STL과 iterator(반복자) 응용, #동적 할당

				<구현 설계>
1) 아군 팀의 종족과 생성 개체수를 선택하고 각 몬스터의 이름/공격력/체력을 지정한다.
2) 적군 팀의 종족과 생성 개체수를 선택하고 각 몬스터의 이름/공격력/체력을 지정한다.
3) 생존한 아군 유닛과 적군 유닛 중 배틀할 아군 유닛 한 개와 적군 유닛 한 개를 선정한다.
4) 두 유닛의 전투 결과를 콘솔에 출력한다.
5) 한 쪽 팀의 유닛이 모두 죽거나, 양 팀의 유닛이 모두 죽은 경우 승리/무승부/패배 여부를 콘솔로 출력해준다.
6) 게임을 다시 시작하는지 여부를 묻고 Y를 누르면 새 게임이 진행되고, N을 누르면 게임이 종료된다.

A) 몬스터 (Unit, Zerg, Terran, Protoss 클래스)
Unit 클래스의 자식으로 Zerg,Terran,Protoss 클래스를 만든다.
Zerg, Terran, Protoss 클래스는 Unit 부모 클래스로부터 상속을 받은 클래스이다.

B) 전투(Battle 클래스)
아군과 적군의 전투 전반을 관리하는 클래스이다.
이때 main 함수에서 아군의 클래스 리스트와 적군의 클래스 리스트를 레퍼런스로 받아온다.
싸움이 끝나면 전투로그를 출력하고 아군 또는 적군 유닛이 모두 사망할 때까지 반복적으로 전투를 진행한다.
아군 또는 적군 유닛이 모두 사망하면 전투 결과(승리,무승부,패배)를 출력한다.

C) 게임매니저 (GameManager 클래스)
게임 시작 및 종료 관리 (예정)

				<문제점/보완점>
보완 개념 : #가상 함수
1) virtual 키워드를 통해 각 유닛별 공격을 각각 구현하고 싶다. (Zerg는 침을 뱉는 공격을 한다. Terran은 몸통 박치기 공격을 한다. 등...)
2) 이 콘솔 게임에서 Zerg와 Terran 그리고 Protoss의 각 특징성이 없다. (Zerg나 Terran이나 Protoss나 각 몬스터의 특성이 없다.)
3) GameManager 클래스를 통해 다시 시작 여부를 구현하는 Restart() 메서드를 만들어 사용하고 싶었는데 이럴 경우 처음부터 다시 게임을 시작하는데 제약이 있었다. 이 문제를 해결할 방법이 필요하다.
4) 연산자 오버로딩을 활용해 클래스끼리의 연산을 구현하고 싶다. 
예를 들어 Zerg 5마리의 HP와 ATK 정보를 받고 Zerg 5마리의 HP 총합과 ATK 총합을 구하고, Terran 5마리의 HP와 ATK 정보를 받고 Terran 5마리의 HP 총합과 ATK 총합을 구해 이를 배틀하여 결과를 출력하는 방식을 구현하고 싶다.